// ====================================
// REUSABLE MIXINS
// ====================================

// Import variables to use in mixins
@use "variables" as vars;

// Responsive breakpoint mixins
@mixin respond-above($breakpoint) {
  @if map-has-key(vars.$breakpoints, $breakpoint) {
    $breakpoint-value: map-get(vars.$breakpoints, $breakpoint);
    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin respond-below($breakpoint) {
  @if map-has-key(vars.$breakpoints, $breakpoint) {
    $breakpoint-value: map-get(vars.$breakpoints, $breakpoint);
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

// ==================================== Animation
// $transition-base: all 0.2s ease-in-out;
// $transition-fade: opacity 0.15s linear;
// $transition-collapse: height 0.35s ease;
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}
// ====================================

// ==================================== Typography
@mixin heading-font {
  font-family: vars.$headings-font-family;
  font-weight: vars.$headings-font-weight;
}
@mixin body-font {
  font-family: vars.$body-font-family;
  font-weight: vars.$body-font-weight;
}
@mixin font-size($size) {
  font-size: $size;
  line-height: $size * 1.15;
}

// ==================================== Flexbox helpers
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// ==================================== Box shadows
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: $box-shadow-sm;
  } @else if $level == 2 {
    box-shadow: $box-shadow;
  } @else if $level == 3 {
    box-shadow: $box-shadow-lg;
  }
}

// ==================================== Container
@mixin container($padding: $spacing-md) {
  width: 100%;
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $padding;
  padding-right: $padding;
}

// ==================================== Card styling
@mixin card {
  background-color: var(--bs-body-bg);
  border-radius: $border-radius;
  padding: $spacing-lg;
  @include shadow(1);

  html[data-theme="dark"] & {
    background-color: $dark-card-bg;
    border: 1px solid rgba($white, 0.1);
  }
}

//====================================/ Button styles
@mixin button-base {
  display: inline-block;
  font-weight: $font-weight-normal;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border: $border-width solid transparent;
  padding: $spacing-sm $spacing-lg;
  border-radius: $border-radius;
  transition: $transition-base;
}

@mixin button-variant(
  $background,
  $border,
  $hover-background,
  $hover-border,
  $text-color: $white
) {
  @include button-base;
  background-color: $background;
  border-color: $border;
  color: $text-color;

  &:hover,
  &:focus {
    background-color: $hover-background;
    border-color: $hover-border;
  }
}

//====================================// Theme-aware styling
@mixin dark-mode {
  html[data-theme="dark"] & {
    @content;
  }
}

@mixin light-mode {
  html[data-theme="light"] & {
    @content;
  }
}

//====================================// Icon styling
@mixin icon($size: 1.25rem, $color: null) {
  width: $size;
  height: $size;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  @if $color {
    color: $color;
  }
}

//====================================// Focus styles
@mixin focus-outline {
  outline: none;
  box-shadow: 0 0 0 3px rgba($primary-color, 0.25);
}

// Truncate text with ellipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin row-flex {
  display: flex;
  flex-wrap: wrap;
}
